version: '3.8'

# Development override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Add development stage to Dockerfile
    volumes:
      - ./backend:/app  # Live code reloading
      - ./config:/app/config
      - ./data:/app/data
    environment:
      - ENV=development
      - DEBUG=true
      - RELOAD=true
    ports:
      - "8000:8000"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "3000:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development database with persistent volume
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: stackhealth_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d stackhealth_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching in development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Development tools container
  dev-tools:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    command: ["tail", "-f", "/dev/null"]  # Keep container running
    profiles:
      - tools  # Only start with --profile tools

volumes:
  postgres_dev_data:
  redis_dev_data:
